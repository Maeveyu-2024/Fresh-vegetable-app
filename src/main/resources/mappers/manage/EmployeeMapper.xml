<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.woniu.dao.manage.EmployeeDao">

    <resultMap type="cn.woniu.entity.manage.Employee" id="EmployeeMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="updateTime" column="update_time"/>
        <result property="departmentId" column="department_id"/>
        <result property="workage" column="workage"/>
        <result property="age" column="age"/>
        <result property="inductionTime" column="induction_time"/>
        <result property="resignTime" column="resign_time"/>
        <result property="salary" column="salary"/>
        <result property="birthday" column="birthday"/>
        <result property="gender" column="gender"/>
        <collection property="auths" ofType="java.lang.String">
            <result column="auth_code"/>
        </collection>
    </resultMap>

    <select id="queryEmployeeByUsername" resultMap="EmployeeMap">
        SELECT
            e.id,
            e.username,
            e.password,
            a.auth_code
        FROM
            employee e
            LEFT JOIN employee_authority ea ON e.id = ea.employee_id
            LEFT JOIN authority a ON ea.authority_id = a.id
        WHERE
            e.username = #{username}
    </select>
    <select id="queryEmployeeList" resultType="cn.woniu.entity.manage.Employee">
        SELECT
	        id,
	        name,
	        workage,
	        age,
	        gender,
	        salary,
	        username,
	        password,
	        department_id,
	        status,
	        birthday
        FROM
	        employee
	    <where>
	        status != 2
            <if test="name != null and name != ''">
                and name like concat("%",#{name},"%")
            </if>
            <if test="departmentId != null and departmentId != ''">
                and department_id = #{departmentId}
            </if>
            <if test="workage != null and workage != ''">
                and workage &gt;= #{workage}
            </if>
            <foreach collection="selectInductionTime" item="InductionTime" index="index">
                <if test="index == 0 and InductionTime != null">
                    and induction_time &gt;= #{InductionTime}
                </if>
                <if test="index == 1 and InductionTime != null">
                    and induction_time &lt;= #{InductionTime}
                </if>
            </foreach>
        </where>
    </select>

    <update id="updateEmployeeStatusById">
        update employee set status = #{status} where id = #{id}
    </update>

    <update id="updateEmployeeInfo">
        update employee set name=#{name},username=#{username},password=#{password},salary=#{salary},age=#{age},workage=#{workage},birthday=#{birthday} where id =#{id}
    </update>

    <insert id="insertEmployee">
        insert into employee(name,username,password,birthday,age) values(#{name},#{username},#{password},#{birthday},#{age})
    </insert>
</mapper>
